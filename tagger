#!/usr/bin/env bash

# Enable BASH 4's globstar
shopt -s globstar

# Enable colors
BOLD_BLUE="\033[1;34m"
BOLD_GREEN="\033[1;32m"
BOLD_RED="\033[1;31m"
CYAN="\033[0;36m"
MAGENTA="\033[0;35m"
YELLOW="\033[0;33m"
NORMAL="\033[0m"

__place_cursor () {
	printf "\033[${1};${2}H"
}

__clear_line () {
	printf "\033[K"
}

__retag_album () {
	if [[ -n "${artist_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]

		metaflac --remove-tag=ARTIST "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=ARTIST="${artist_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${album_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=ALBUM "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=ALBUM="${album_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${discnumber_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=DISCNUMBER "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=DISCNUMBER="${discnumber_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${date_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=DATE "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=DATE="${date_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${tracktotal_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=TRACKTOTAL "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=TRACKTOTAL="${tracktotal_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${genre_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=GENRE "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=GENRE="${genre_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${releasetype_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=RELEASETYPE "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=RELEASETYPE="${releasetype_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${source_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=SOURCE "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=SOURCE="${source_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi

	if [[ -n "${mastering_tag}" ]] ; then
		#printf "%s\n" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --remove-tag=MASTERING "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
		metaflac --set-tag=MASTERING="${mastering_tag}" "${flac_directories[${current_directory}]}"/*.[Ff][Ll][Aa][Cc]
	fi
}

__retag_tracks () {
	:
}

# Top banner displaying current working directory
__banner () {
	printf "${BOLD_GREEN}%s${NORMAL}\n" " ${flac_directories[${current_directory}]##*/}"
}

# This is the directory to process FLACs
directory="${1%/}"

# Find all the FLAC files and store in an array
total_flacs_array=( "${directory}"/**/*.[Ff][Ll][Aa][Cc] )

# Find all the directories to process (ie albums)
for i in "${total_flacs_array[@]}" ; do
	if [[ "${processed_directory}" != "${i%/*}" ]] ; then
		flac_directories+=( "${i%/*}" )
	fi
	processed_directory="${i%/*}"
done

# This will iterate through each directory and on each
# directory, do some processing
for current_directory in "${!flac_directories[@]}" ; do

	# Clear the screen
	printf "\033c"

	# Display current directory
	__banner

	# Show album tagging title
	printf "%s\n\n" "Album Tagging"

	# All the FLAC files in the current processed directory
	album_flacs_array=( "${flac_directories[${current_directory}]}"/**/*.[Ff][Ll][Aa][Cc] )

	# Total lines that will be used to display the
	# FLAC files above
	total_lines="4"

	# Pick the first FLAC file in the current directory and display all the
	# tags that will be changed album-wise (multiple tag)
	for first_flac in "${album_flacs_array[0]}" ; do
		# Artist Tag
		ARTIST="$(metaflac --show-tag=ARTIST "${first_flac}")"
		ARTIST="${ARTIST#*=}"
		if [[ -z "${ARTIST}" ]] ; then
			ARTIST="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "         " "ARTIST:" " " "${ARTIST}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "         " "ARTIST:" " " "${ARTIST}"
		fi

		# Album Tag
		ALBUM="$(metaflac --show-tag=ALBUM "${first_flac}")"
		ALBUM="${ALBUM#*=}"
		if [[ -z "${ALBUM}" ]] ; then
			ALBUM="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "          " "ALBUM:" " " "${ALBUM}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "          " "ALBUM:" " " "${ALBUM}"
		fi

		# Discnumber Tag
		DISCNUMBER="$(metaflac --show-tag=DISCNUMBER "${first_flac}")"
		DISCNUMBER="${DISCNUMBER#*=}"
		if [[ -z "${DISCNUMBER}" ]] ; then
			DISCNUMBER="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "     " "DISCNUMBER:" " " "${DISCNUMBER}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "     " "DISCNUMBER:" " " "${DISCNUMBER}"
		fi

		# Date Tag
		DATE="$(metaflac --show-tag=DATE "${first_flac}")"
		DATE="${DATE#*=}"
		if [[ -z "${DATE}" ]] ; then
			DATE="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "           " "DATE:" " " "${DATE}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "           " "DATE:" " " "${DATE}"
		fi

		# Tracktotal Tag
		TRACKTOTAL="$(metaflac --show-tag=TRACKTOTAL "${first_flac}")"
		TRACKTOTAL="${TRACKTOTAL#*=}"
		if [[ -z "${TRACKTOTAL}" ]] ; then
			TRACKTOTAL="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "     " "TRACKTOTAL:" " " "${TRACKTOTAL}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "     " "TRACKTOTAL:" " " "${TRACKTOTAL}"
		fi

		# Genre Tag
		GENRE="$(metaflac --show-tag=GENRE "${first_flac}")"
		GENRE="${GENRE#*=}"
		if [[ -z "${GENRE}" ]] ; then
			GENRE="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "          " "GENRE:" " " "${GENRE}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "          " "GENRE:" " " "${GENRE}"
		fi

		# ReleaseType Tag
		RELEASETYPE="$(metaflac --show-tag=RELEASETYPE "${first_flac}")"
		RELEASETYPE="${RELEASETYPE#*=}"
		if [[ -z "${RELEASETYPE}" ]] ; then
			RELEASETYPE="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "    " "RELEASETYPE:" " " "${RELEASETYPE}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "    " "RELEASETYPE:" " " "${RELEASETYPE}"
		fi

		# Source Tag
		SOURCE="$(metaflac --show-tag=SOURCE "${first_flac}")"
		SOURCE="${SOURCE#*=}"
		if [[ -z "${SOURCE}" ]] ; then
			SOURCE="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "         " "SOURCE:" " " "${SOURCE}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "         " "SOURCE:" " " "${SOURCE}"
		fi

		# Mastering Tag
		MASTERING="$(metaflac --show-tag=MASTERING "${first_flac}")"
		MASTERING="${MASTERING#*=}"
		if [[ -z "${MASTERING}" ]] ; then
			MASTERING="<empty>"
			printf "%s${CYAN}%s${NORMAL}%s${MAGENTA}%s${NORMAL}\n" "      " "MASTERING:" " " "${MASTERING}"
		else
			printf "%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" "      " "MASTERING:" " " "${MASTERING}"
		fi
	done

	# Separator line
	printf "%s\n" "---------------------------------------------------------------------------"

	current_line=4
	total_lines=14

	# Display each tag to change (from the first FLAC file) and display
	# a prompt giving the user a chance to change the tag found.  This will
	# then be reflected back up in the previous listing
	for first_flac in "${album_flacs_array[0]}" ; do

		if [[ "${ARTIST}" == "<empty>" ]] ; then
			ARTIST=""
		fi

		__place_cursor "${current_line}" 7
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"         " "ARTIST:"
		read -r -e -i "${ARTIST}" -p " " artist_tag 

		if [[ "${ARTIST}" != "${artist_tag}" ]] ; then
			if [[ -z "${ARTIST}" ]] ; then
				ARTIST="<empty> -> ${artist_tag}"
			else
				ARTIST="${ARTIST} -> ${artist_tag}"
			fi
		fi

		__place_cursor "${current_line}" 7
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "ARTIST:" " " "${ARTIST}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${ALBUM}" == "<empty>" ]] ; then
			ALBUM=""
		fi

		__place_cursor "${current_line}" 8
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"          " "ALBUM:"
		read -r -e -i "${ALBUM}" -p " " album_tag

		if [[ "${ALBUM}" != "${album_tag}" ]] ; then
			if [[ -z "${ALBUM}" ]] ; then
				ALBUM="<empty> -> ${album_tag}"
			else
				ALBUM="${ALBUM} -> ${album_tag}"
			fi
		fi

		__place_cursor "${current_line}"  8
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "ALBUM:" " " "${ALBUM}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${DISCNUMBER}" == "<empty>" ]] ; then
			DISCNUMBER=""
		fi

		__place_cursor "${current_line}" 3
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"     " "DISCNUMBER:"
		read -r -e -i "${DISCNUMBER}" -p " " discnumber_tag

		if [[ "${DISCNUMBER}" != "${discnumber_tag}" ]] ; then
			if [[ -z "${DISCNUMBER}" ]] ; then
				DISCNUMBER="<empty> -> ${discnumber_tag}"
			else
				DISCNUMBER="${DISCNUMBER} -> ${discnumber_tag}"
			fi
		fi

		__place_cursor "${current_line}" 3
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "DISCNUMBER:" " " "${DISCNUMBER}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${DATE}" == "<empty>" ]] ; then
			DATE=""
		fi

		__place_cursor "${current_line}" 9
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"           " "DATE:"
		read -r -e -i "${DATE}" -p " " date_tag

		if [[ "${DATE}" != "${date_tag}" ]] ; then
			if [[ -z "${DATE}" ]] ; then
				DATE="<empty> -> ${date_tag}"
			else
				DATE="${DATE} -> ${date_tag}"
			fi
		fi

		__place_cursor "${current_line}" 9
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "DATE:" " " "${DATE}"
		__place_cursor "${total_lines}" 0

		printf "\033[K"

		((current_line++))

		if [[ "${TRACKTOTAL}" == "<empty>" ]] ; then
			TRACKTOTAL=""
		fi

		__place_cursor "${current_line}" 3
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"     " "TRACKTOTAL:"
		read -r -e -i "${TRACKTOTAL}" -p " " tracktotal_tag

		if [[ "${TRACKTOTAL}" != "${tracktotal_tag}" ]] ; then
			if [[ -z "${TRACKTOTAL}" ]] ; then
				TRACKTOTAL="<empty> -> ${tracktotal_tag}"
			else
				TRACKTOTAL="${TRACKTOTAL} -> ${tracktotal_tag}"
			fi
		fi

		__place_cursor "${current_line}" 3
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "TRACKTOTAL:" " " "${TRACKTOTAL}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${GENRE}" == "<empty>" ]] ; then
			GENRE=""
		fi

		__place_cursor "${current_line}" 8
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"          " "GENRE:"
		read -r -e -i "${GENRE}" -p " " genre_tag

		if [[ "${GENRE}" != "${genre_tag}" ]] ; then
			if [[ -z "${GENRE}" ]] ; then
				GENRE="<empty> -> ${genre_tag}"
			else
				GENRE="${GENRE} -> ${genre_tag}"
			fi
		fi

		__place_cursor "${current_line}" 8
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "GENRE:" " " "${GENRE}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${RELEASETYPE}" == "<empty>" ]] ; then
			RELEASETYPE=""
		fi

		__place_cursor "${current_line}" 2
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"    " "RELEASETYPE:"
		read -r -e -i "${RELEASETYPE}" -p " " releasetype_tag

		if [[ "${RELEASETYPE}" != "${releasetype_tag}" ]] ; then
			if [[ -z "${RELEASETYPE}" ]] ; then
				RELEASETYPE="<empty> -> ${releasetype_tag}"
			else
				RELEASETYPE="${RELEASETYPE} -> ${releasetype_tag}"
			fi
		fi

		__place_cursor "${current_line}" 2
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "RELEASETYPE:" " " "${RELEASETYPE}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${SOURCE}" == "<empty>" ]] ; then
			SOURCE=""
		fi

		__place_cursor "${current_line}" 7
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"         " "SOURCE:"
		read -r -e -i "${SOURCE}" -p " " source_tag

		if [[ "${SOURCE}" != "${source_tag}" ]] ; then
			if [[ -z "${SOURCE}" ]] ; then
				SOURCE="<empty> -> ${source_tag}"
			else
				SOURCE="${SOURCE} -> ${source_tag}"
			fi
		fi

		__place_cursor "${current_line}" 7
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "SOURCE:" " " "${SOURCE}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((current_line++))

		if [[ "${MASTERING}" == "<empty>" ]] ; then
			MASTERING=""
		fi

		__place_cursor "${current_line}" 4
		printf "${BOLD_GREEN}%s${NORMAL}" "->"
		__place_cursor "${total_lines}" 0

		printf "%s${CYAN}%s${NORMAL}" \
		"      " "MASTERING:"
		read -r -e -i "${MASTERING}" -p " " mastering_tag

		if [[ "${MASTERING}" != "${mastering_tag}" ]] ; then
			if [[ -z "${MASTERING}" ]] ; then
				MASTERING="<empty> -> ${mastering_tag}"
			else
				MASTERING="${MASTERING} -> ${mastering_tag}"
			fi
		fi

		__place_cursor "${current_line}" 4
		printf "%s${MAGENTA}%s${NORMAL}%s${CYAN}%s${NORMAL}%s${YELLOW}%s${NORMAL}" \
		" " "*" " " "MASTERING:" " " "${MASTERING}"
		__place_cursor "${total_lines}" 0

		__clear_line

		((total_lines++))

		while read -e -r -p " Tag all the files in ${flac_directories[${current_directory}]##*/}? " ; do
			case "${REPLY}" in
				[Yy] | "")
					#__retag
					retag_files="true"
					#exit 0
					break
				;;
				[Yy][Ee][Ss])
					retag_files="true"
					#exit 0
					#__retag
					break
				;;
				[Nn])
					#__redo_directory
					#exit 0
					#__retag
					break
				;;
				[Nn][Oo])
					#__redo_directory
					#exit 0
					#__retag
					break
				;;
				*)
					printf "%s\n" "Unknown answer: ${REPLY}"
				;;
			esac
		done

		__place_cursor "$(( ${total_lines} - 2 ))" 0
		printf "\r\033[K"
		__place_cursor "$(( ${total_lines} - 1 ))" 0
		printf "\r\033[K"

		printf "%s\n\n" "Individual File Metadata"

		for flac in "${!album_flacs_array[@]}" ; do
			# Print current FLAC file with song length
			LENGTH="$(shntool len -ct "${album_flacs_array[${flac}]}")"
			LENGTH="${LENGTH%%.*}"
			LENGTH="${LENGTH#     }"
			printf "\r\033[K%s${BOLD_BLUE}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" \
			"    " "${LENGTH}" " " "${album_flacs_array[${flac}]##*/}"
		done

		# Separator line
		printf "%s\n" "---------------------------------------------------------------------------"

		current_line="$(( ${total_lines} + 1 ))"
		total_lines="$(( ${total_lines} + ${#album_flacs_array[@]} + 2 ))"

		for flac in "${!album_flacs_array[@]}" ; do
			# Print current FLAC file with song length
			LENGTH="$(shntool len -ct "${album_flacs_array[${flac}]}")"
			LENGTH="${LENGTH%%.*}"
			LENGTH="${LENGTH#     }"

			__place_cursor "${current_line}" 2
			printf "${BOLD_GREEN}%s${NORMAL}" "->"
			__place_cursor "${total_lines}" 0

			# Tracknumber Tag
			TRACKNUMBER="$(metaflac --show-tag=TRACKNUMBER "${album_flacs_array[${flac}]}")"
			TRACKNUMBER="${TRACKNUMBER#*=}"
			if [[ -z "${TRACKNUMBER}" ]] ; then
				TRACKNUMBER="<empty>"
			fi

			# Title Tag
			TITLE="$(metaflac --show-tag=TITLE "${album_flacs_array[${flac}]}")"
			TITLE="${TITLE#*=}"
			if [[ -z "${TITLE}" ]] ; then
				TITLE="<empty>"
			fi

			if [[ "${TITLE}" == "<empty>" ]] ; then
				TITLE=""
			fi
			if [[ "${TRACKNUMBER}" == "<empty>" ]] ; then
				TRACKNUMBER=""
			fi

			printf "%s${CYAN}%s${NORMAL}" \
			" " "TRACKNUMBER:"
			read -r -e -i "${TRACKNUMBER}" -p " " track_number

			__place_cursor "${total_lines}" 0

			printf "\r\033[K%s${CYAN}%s${NORMAL}" \
			"       " "TITLE:"
			read -r -e -i "${TITLE}" -p " " song_title

			__place_cursor "${current_line}" 2

			printf "%s${MAGENTA}%s${NORMAL}%s${BOLD_BLUE}%s${NORMAL}%s${YELLOW}%s${NORMAL}\n" \
			" " "*" " " "${LENGTH}" " " "${album_flacs_array[${flac}]##*/}"

			((current_line++))
		done

		printf "\r\033[K\n"
	
		while read -e -r -p " Tag all the files in ${flac_directories[${current_directory}]##*/}? " ; do
			case "${REPLY}" in
				[Yy] | "")
					#__retag
					retag_files="true"
					#exit 0
					break
				;;
				[Yy][Ee][Ss])
					retag_files="true"
					#exit 0
					#__retag
					break
				;;
				[Nn])
					#__redo_directory
					#exit 0
					#__retag
					break
				;;
				[Nn][Oo])
					#__redo_directory
					#exit 0
					#__retag
					break
				;;
				*)
					printf "%s\n" "Unknown answer: ${REPLY}"
				;;
			esac
		done

	done
done
